(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{632:function(t,a,n){"use strict";n.r(a);var s=n(4),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"题目-65-不用加减乘除做加法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目-65-不用加减乘除做加法"}},[t._v("#")]),t._v(" 题目 65. 不用加减乘除做加法")]),t._v(" "),n("h3",{attrs:{id:"题目描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/leetbook/read/illustrate-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("来源：画解剑指offer"),n("OutboundLink")],1)]),t._v(" "),n("h4",{attrs:{id:"题目描述-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目描述-2"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),n("p",[t._v("写一个函数，求两个整数之和，要求在函数体内不得使用 “+”、“-”、“*”、“/” 四则运算符号。")]),t._v(" "),n("p",[t._v("示例:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("输入"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n输出"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")]),n("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[n("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1607949744796-36714"}},[t._v("success")]),n("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"输入: a = 1, b = 1\n输出: 2\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1607949744796-36714","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"file",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])])])]),n("p",[t._v("提示：")]),t._v(" "),n("p",[t._v("a, b  均可能是负数或 0\n结果不会溢出 32 位整数")]),t._v(" "),n("h3",{attrs:{id:"解题思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[t._v("#")]),t._v(" 解题思路")]),t._v(" "),n("h4",{attrs:{id:"思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),n("p",[n("code",[t._v("标签：位运算")])]),t._v(" "),n("ul",[n("li",[t._v("整体思路：\n"),n("ul",[n("li",[t._v("这道题在不让用四则基础运算的基础上把结果算出来，说明只能利用二进制的位运算来求解")]),t._v(" "),n("li",[t._v("其中无进位和用 n 表示，进位用 c 表示，sum = a + b = n + c，位运算可以分别计算出来这两个")]),t._v(" "),n("li",[t._v("以 2 个 1 位的二进制数字求和为例，共有 4 种情况，观察下规律，进行位运算求和公式推导")]),t._v(" "),n("li",[t._v("从表中可以看出来，无进位和 n=a⨁b，进位 c = a & b << 1")]),t._v(" "),n("li",[t._v("在 sum = n + c 的计算中，还是使用了加法，进而这种加法运算可以再次使用位运算来解决，这里就是一个循环的思路")]),t._v(" "),n("li",[t._v("循环结束的条件是c = 0，因为当c = 0时，sum = n + c = n + 0 = n的，所以n就是最终的结果")])])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("a")]),t._v(" "),n("th",[t._v("b")]),t._v(" "),n("th",[t._v("无进位和 n")]),t._v(" "),n("th",[t._v("进位 c")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("0")]),t._v(" "),n("td",[t._v("0")]),t._v(" "),n("td",[t._v("0")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[t._v("0")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[t._v("1")]),t._v(" "),n("td",[t._v("0")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[t._v("1")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("0")]),t._v(" "),n("td",[t._v("10")])])])]),t._v(" "),n("ul",[n("li",[t._v("复杂度：\n"),n("ul",[n("li",[t._v("时间复杂度：O(1)。因为题目中提到结果不会溢出 32 位整数，所以最多进行 32 次循环")]),t._v(" "),n("li",[t._v("空间复杂度：O(1)。只需要存储无进位和和进位即可")])])])]),t._v(" "),n("h4",{attrs:{id:"算法流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法流程"}},[t._v("#")]),t._v(" 算法流程")]),t._v(" "),n("ol",[n("li",[t._v("当进位不为 0 时进行循环")]),t._v(" "),n("li",[t._v("使用公式 c = a & b << 1 计算出进位值")]),t._v(" "),n("li",[t._v("根据公式 n=a⨁b 求出无进位和")]),t._v(" "),n("li",[t._v("无进位和和进位值依次放到 a、b 中，进行下一次循环")])]),t._v(" "),n("h3",{attrs:{id:"代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {number} a\n * @param {number} b\n * @return {number}\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// todo 方法一")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curry\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    curry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进位")]),t._v("\n    n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进位后剩下的 1")]),t._v("\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n\n    b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curry\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ? 两个方法思路完全一样")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// todo 方法二")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^=")]),t._v(" b\n    b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")]),n("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[n("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1607949744805-73086"}},[t._v("success")]),n("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"/**\n * @param {number} a\n * @param {number} b\n * @return {number}\n */\n// todo 方法一\nvar add = function (a, b) {\n  let n, curry\n  while (b !== 0) {\n    curry = (a & b) << 1 // 进位\n    n = a ^ b // 进位后剩下的 1\n    a = n\n    b = curry\n  }\n  return a\n};\n\n// ? 两个方法思路完全一样\n\n// todo 方法二\nvar add = function (a, b) {\n  while (b != 0) {\n    let c = (a & b) << 1\n    a ^= b\n    b = c\n  }\n  return a\n};\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1607949744805-73086","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"file",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);