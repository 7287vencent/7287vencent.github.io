(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{611:function(t,n,e){"use strict";e.r(n);var a=e(4),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"题目-226-翻转二叉树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目-226-翻转二叉树"}},[t._v("#")]),t._v(" 题目 226. 翻转二叉树")]),t._v(" "),e("h3",{attrs:{id:"题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),e("p",[t._v("翻转一棵二叉树。")]),t._v(" "),e("p",[t._v("示例：")]),t._v(" "),e("p",[t._v("输入：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("   \\\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" \\   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1611228749463-38025"}},[t._v("success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"\n     4\n   /   \\\n  2     7\n / \\   / \\\n1   3 6   9\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1611228749463-38025","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"file",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])])])]),e("p",[t._v("输出：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("   \\\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" \\   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1611228749467-39107"}},[t._v("success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"\n     4\n   /   \\\n  7     2\n / \\   / \\\n9   6 3   1\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1611228749467-39107","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"file",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])])])]),e("p",[t._v("备注:\n这个问题是受到 Max Howell 的 原问题 启发的 ：")]),t._v(" "),e("p",[e("code",[t._v("谷歌：我们90％的工程师使用您编写的软件(Homebrew)，但是您却无法在面试时在白板上写出翻转二叉树这道题，这太糟糕了。")])]),t._v(" "),e("h3",{attrs:{id:"解题思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[t._v("#")]),t._v(" 解题思路")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/invert-binary-tree/solution/fan-zhuan-er-cha-shu-by-leetcode-solution/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方题解"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"方法一-递归"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法一-递归"}},[t._v("#")]),t._v(" 方法一：递归")]),t._v(" "),e("ul",[e("li",[t._v("很简单的思路，就是把树的左右节点交换")]),t._v(" "),e("li",[t._v("先判断当前节点是否为，"),e("code",[t._v("null")]),t._v(", 为 "),e("code",[t._v("null")]),t._v(" 的话，直接返回 "),e("code",[t._v("root")])]),t._v(" "),e("li",[t._v("然后 "),e("code",[t._v("root.left = fun(root.right)")])]),t._v(" "),e("li",[t._v("同理 "),e("code",[t._v("root.right = fun(root.left)")])]),t._v(" "),e("li",[t._v("最后记得返回 "),e("code",[t._v("root")])])]),t._v(" "),e("h4",{attrs:{id:"复杂度分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),e("ul",[e("li",[t._v("时间复杂度：O(N)，其中 NN 为二叉树节点的数目。我们会遍历二叉树中的每一个节点，对每个节点而言，我们在常数时间内交换其两棵子树。")]),t._v(" "),e("li",[t._v("空间复杂度：O(N)。使用的空间由递归栈的深度决定，它等于当前节点在二叉树中的高度。在平均情况下，二叉树的高度与节点个数为对数关系，即 O(logN)。而在最坏情况下，树形成链状，空间复杂度为 O(N)。")])]),t._v(" "),e("h3",{attrs:{id:"代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("invertTree")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invertTree")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invertTree")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1611228749468-17033"}},[t._v("success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar invertTree = function (root) {\n  if (!root) {\n    return root;\n  }\n  [root.left, root.right] = [invertTree(root.right), invertTree(root.left)];\n  return root;\n};\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1611228749468-17033","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"file",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])])])])])}),[],!1,null,null,null);n.default=s.exports}}]);